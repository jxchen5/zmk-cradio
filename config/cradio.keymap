/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };

        combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };

        combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };

        combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };

        combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Y    &kp C             &kp L  &kp M          &kp K          &kp Z      &kp F       &kp U               &kp COMMA          &kp SQT
&lt 1 I  &mt LEFT_SHIFT S  &kp R  &lt 3 T        &kp G          &kp P      &kp N       &kp E               &mt RIGHT_SHIFT L  &lt 2 O
&kp Q    &kp V             &kp W  &kp D          &kp J          &kp B      &kp H       &mt LEFT_GUI ENTER  &kp PERIOD         &kp X
                                  &kp BACKSPACE  &kp BACKSLASH  &kp SPACE  &kp DOLLAR
            >;
        };

        left_layer {
            bindings = <
&kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp EQUAL  &kp NUMBER_9  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &kp TILDE
&kp LC(F)         &kp LC(C)             &kp LC(X)              &kp LC(V)          &kp PLUS   &kp MINUS     &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp LESS_THAN
&kp LEFT_BRACE    &kp LC(Z)             &kp LC(S)              &kp RIGHT_BRACE    &kp LC(Y)  &kp UNDER     &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp GREATER_THAN
                                                               &kp BACKSPACE      &mo 1      &mo 2         &kp SPACE
            >;
        };

        right_layer {
            bindings = <
&kp GRAVE   &kp PERCENT   &kp DOLLAR       &kp HASH       &kp PIPE       &kp C_VOLUME_UP    &kp PAGE_UP    &kp UP_ARROW  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES
&kp TAB     &kp AT_SIGN   &kp EXCLAMATION  &kp QUESTION   &kp COLON      &kp LS(LC(M))      &kp LEFT       &kp DOWN      &kp RIGHT         &kp BACKSLASH
&kp ESCAPE  &kp ASTERISK  &kp AMPERSAND    &kp CARET      &kp SEMICOLON  &kp C_VOLUME_DOWN  &kp PAGE_DOWN  &kp HOME      &kp END           &kp SLASH
                                           &kp BACKSPACE  &mo 1          &mo 2              &kp SPACE
            >;
        };

        tri_layer {
            bindings = <
&kp NUM_1   &kp NUM_2   &kp NUM_3   &kp NUM_4  &kp NUM_5  &trans  &trans     &trans        &trans      &trans
&kp F1      &kp F2      &kp F3      &kp F4     &kp F5     &trans  &kp PG_UP  &kp K_VOL_UP  &kp K_MUTE  &trans
&bt BT_CLR  &bt BT_NXT  &bt BT_PRV  &kp F6     &kp F7     &trans  &kp PG_DN  &kp K_VOL_DN  &trans      &trans
                                    &trans     &trans     &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans
            >;
        };
    };
};
